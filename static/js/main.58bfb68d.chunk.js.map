{"version":3,"sources":["utils.js","components/Lines.js","hooks/index.js","Pages/Home.js","Pages/About.js","images/cheese.js","images/branch.js","images/radio.js","images/starmap.js","components/Project/index.js","Pages/Projects.js","App.js","reportWebVitals.js","index.js"],"names":["pathToString","pathData","index","spaceBetweenLines","waveInterval","waveHeights","spacer","getRandomWave","svgWidth","wave","getWaveIntervals","getWaveHeight","waves","i","getOneWaveInterval","waveIntervalIndex","Math","round","random","console","log","getNextStep","targetWave","setTargetWave","length","j","Lines","isOnHomePage","useState","wavePaths","setWavePaths","callback","timeout","requestRef","useRef","animate","setTimeout","current","requestAnimationFrame","useEffect","cancelAnimationFrame","clearInterval","useAnimationFrame","prevWaves","newPaths","paths","slice","lastPath","nextPath","push","updatePaths","nextStep","Object","assign","className","viewBox","version","map","d","Home","to","React","Component","About","Cheese","id","width","height","class","transform","stroke","fill","fillRule","cx","cy","r","points","Branch","strokeWidth","Radio","maskContentUnits","maskUnits","x","y","href","mask","rx","ry","StarMap","Project","projectName","copy","codeUrl","liveUrl","isOpen","setIsOpen","images","wavy","mousetrap","starchart","romanholiday","lines","strokeColor","trimmedName","replace","onClick","Projects","project","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58bfb68d.chunk.js","sourcesContent":["// Generates the string path defining the shape of the <path> element\nexport const pathToString = (pathData, index) => {\n    const { spaceBetweenLines, waveInterval, waveHeights } = pathData;\n    const spacer = spaceBetweenLines * index;\n    return `M${waveInterval[0]},${spacer} Q${waveInterval[1]},${waveHeights[0] +\n      spacer} ${waveInterval[2]},${spacer} T${waveInterval[3]},${waveHeights[1] +\n      spacer}`;\n};\n\n// here we get random values which we'll use to generate the first path\nexport const getRandomWave = svgWidth => {\n    const wave = {};\n    wave.spaceBetweenLines = 6; // this might change based on page height?\n    wave.waveInterval = getWaveIntervals(svgWidth); // we pass in the svg width for proportions!\n    wave.waveHeights = []; // two random values.\n    wave.waveHeights[0] = getWaveHeight(svgWidth);\n    wave.waveHeights[1] = getWaveHeight(svgWidth);\n    return wave;\n};\n\n// This is a helper function for `getRandomWave`\n// as I recall, basically each is like, a variable location for each peak\nconst getWaveIntervals = svgWidth => {\n    const waves = [];\n    for (let i = 0; i < 4; i++) {\n      waves[i] = getOneWaveInterval(svgWidth, i);\n    }\n    return waves;\n};\n\n//Wave interval makers!\nconst getOneWaveInterval = (svgWidth, waveIntervalIndex) => {\n    switch (waveIntervalIndex) {\n      case 0:\n        return Math.round(Math.random() * (svgWidth / 5) * -1);\n        break;\n      case 1:\n        return Math.round(Math.random() * (svgWidth / 2));\n        break;\n      case 2:\n        return Math.round(Math.random() * (svgWidth / 2) + svgWidth / 2);\n        break;\n      case 3:\n        return Math.round((Math.random() + 2) * svgWidth);\n        break;\n      default:\n        console.log(\"That's not a valid wave interval...\");\n    }\n  };\n\nconst getWaveHeight = svgWidth => {\n    return Math.round((Math.random() * svgWidth) / 2 - svgWidth / 10);\n};\n\nexport const getNextStep = ({ wave, targetWave, svgWidth, setTargetWave }) => {\n    let waveInterval = [0, 0, 0, 0];\n    let waveHeights = [0, 0];\n    let spaceBetweenLines = 8;\n  \n    for (let i = 0; i < waveInterval.length; i++) {\n      if (wave.waveInterval[i] > targetWave.waveInterval[i]) {\n        waveInterval[i] = wave.waveInterval[i] - 1;\n      } else if (wave.waveInterval[i] < targetWave.waveInterval[i]) {\n        waveInterval[i] = wave.waveInterval[i] + 1;\n      } else {\n        targetWave.waveInterval[i] = getOneWaveInterval(svgWidth, i);\n        setTargetWave(targetWave);\n        waveInterval[i] = wave.waveInterval[i];\n      }\n    }\n  \n    for (let j = 0; j < waveHeights.length; j++) {\n      if (wave.waveHeights[j] > targetWave.waveHeights[j]) {\n        waveHeights[j] = wave.waveHeights[j] - 1;\n      } else if (wave.waveHeights[j] < targetWave.waveHeights[j]) {\n        waveHeights[j] = wave.waveHeights[j] + 1;\n      } else {\n        targetWave.waveHeights[j] = getWaveHeight(svgWidth);\n        setTargetWave(targetWave);\n        waveHeights[j] = wave.waveHeights[j];\n      }\n    }\n    const newWave = { spaceBetweenLines, waveHeights, waveInterval };\n    return newWave;\n  };\n\n// Can't say I remember how this works.\n// Like...we're basically snipping the oldest path off and adding another one\n// I *think* this might sort of shuffle the paths FORWARD. \nexport const updatePaths = (paths, targetWave, svgWidth, setTargetWave) => {\n    const newPaths = paths.slice(1);\n    const lastPath = paths[paths.length - 1];\n    // Appallingly unclear code. The paths array is one shorter than usual because THIS one hasn't been pushed on yet\n    const nextPath = getNextStep({wave: lastPath, targetWave, svgWidth, setTargetWave});\n    newPaths.push(nextPath);\n    return newPaths;\n};","import React, { useState, useEffect } from 'react';\nimport { getNextStep, getRandomWave, pathToString, updatePaths } from '../utils'\nimport { useAnimationFrame } from '../hooks';\n\nexport const Lines = ({ isOnHomePage=false}) => {\n    // this keeps track of the plotted paths for each line in the illustration.\n    // the entire array should be updated every frame to be slightly different.\n    const numberOfLines = 40;\n    const svgWidth = 300;\n    const [wavePaths, setWavePaths] = useState([]);\n    const [targetWave, setTargetWave] = useState(getRandomWave(svgWidth));\n\n    // so we'll accept delta time inside of the hook, and prevCount...\n    // but we're passing in the state setter.\n    useAnimationFrame(() => {\n        if (targetWave) {\n            setWavePaths(prevWaves => {\n                let newPaths = updatePaths(prevWaves, targetWave, svgWidth, setTargetWave);\n                return newPaths;\n            });\n        }\n    })\n\n    // wave and targetWave are the two different states that the animation is morphing between\n    // I have a nasty feeling that this is actually just the same logic as `updatePaths` \n    useEffect(() => {\n        let newPaths = [];\n        let wave = getRandomWave(svgWidth); // the current, frontmost wave\n        // generate the first batch of waves.\n        for (let i = 0; i < numberOfLines; i++) {\n            let nextStep = Object.assign({}, getNextStep({ wave, targetWave, svgWidth, setTargetWave }));\n            wave = nextStep;\n            newPaths.push(nextStep);\n        }\n        console.log(\"new paths: \", newPaths);\n        setWavePaths(newPaths);\n    }, []);\n    \n\n    return (\n        <svg \n            className={`${isOnHomePage ? 'home-lines' : 'project-lines'}`}\n            viewBox=\"0 20 200 200\"\n            version=\"1.1\"\n        >\n            <title>a flowing water model</title>\n            <desc>a bunch of lines</desc>\n            {\n                wavePaths.map((wave, index) => {\n                    return <path className=\"line\" d={pathToString(wave, index)}/>\n                })\n            }\n        </svg>\n    )\n}","import { useEffect, useRef } from 'react';\n\nexport const useAnimationFrame = callback => {\n    // Use useRef for mutable variables that we want to persist\n    // without triggering a re-render on their change\n    const requestRef = useRef();\n    // ...do we care about the previous time ref...?\n    \n    // okay so time is the default value going into this call I guess\n    // we don't actually really care about the time.\n    // we care about the previous state of the wavePaths array.\n    const framesPerSecond = 35;\n    let timeout;\n    const animate = () => {\n        timeout = setTimeout(function() {\n            callback();\n            requestRef.current = requestAnimationFrame(animate);\n        }, 1000/framesPerSecond);\n    }\n    \n    useEffect(() => {\n        requestRef.current = requestAnimationFrame(animate);\n        return () => { \n            cancelAnimationFrame(requestRef.current); \n            clearInterval(timeout)\n        };\n    }, []); // Make sure the effect runs only once\n  }","import '../App.css';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Lines } from '../components/Lines'\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <>\n                <Lines isOnHomePage={true}/>\n                <div className=\"title-block\">\n                    <div className=\"text-block\">\n                        <p>Hi, I'm Mill</p>\n                    </div>\n                    <div className=\"button-wrapper\">\n                    <Link className=\"button\" to=\"/projects\">projects</Link>\n                    <Link className=\"button\" to=\"/about\">about</Link>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n}\n\nexport default Home;","import React from 'react';\n\nclass About extends React.Component {\n    \n    render() {\n        return (\n            <div className=\"content-block\">\n                <h2>About</h2>\n                <p>I make websites.</p>\n                <p>Currently, I'm really interested in shaders.</p>\n            </div>\n        )\n    }\n}\n\n\n\nexport default About;","import React from 'react';\n\nexport const Cheese = () => {\n    return (\n        <svg id=\"sparkles\" width=\"180px\" height=\"180px\" viewBox=\"0 0 196 201\" version=\"1.1\">\n            <title>cheese</title>\n            <desc>A sparkling cheese animation</desc>\n                <g class=\"cheese\" transform=\"translate(0.825736, -0.658050)\" stroke=\"#4e4e4e\" stroke-width=\"1\" fill=\"#fefefe\" fillRule=\"evenodd\">\n                    <path class=\"rind\" d=\"M140.53716,155.674043 C166.627074,150.53006 180.874432,142.645546 183.279234,132.0205 C183.279234,112.898607 183.279234,89.48601 183.279234,61.0543107 C172.180863,33.5734235 33.7819873,29.4485314 18.8544183,48.2757285\" fillRule=\"nonzero\"></path>\n                    <path d=\"M98.42355,48.8150502 L98.42355,133.1416 C121.454239,146.324621 135.388137,153.846556 140.225244,155.707405 C140.225244,139.556569 140.107136,81.1221493 140.225244,68.8847891 C130.506188,63.6928895 116.57229,57.0029765 98.42355,48.8150502 Z\" fillRule=\"nonzero\"></path>\n                    <path d=\"M97.962231,133.445916 C60.1919896,133.617667 33.9639126,133.617667 19.2779999,133.445916 C19.2779999,115.109879 19.9741703,75.5914275 19.2779999,48.0902908 C30.4208537,48.0902908 56.6489307,48.4236242 97.962231,49.0902908\" fillRule=\"nonzero\"></path>\n                    <circle fillRule=\"nonzero\" cx=\"63.5\" cy=\"71.5\" r=\"2.5\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"41.5\" cy=\"94\" r=\"2.5\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"48\" cy=\"68\" r=\"1\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"53\" cy=\"62\" r=\"1\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"76\" cy=\"95\" r=\"1\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"83\" cy=\"102\" r=\"1\"></circle>\n                    <polyline class=\"rind\" fillRule=\"nonzero\" points=\"79.963041 175.047964 0.0870315 150.132867 0.0870315 125.291426 28.2875717 104.3208\"></polyline>\n                    <polygon fillRule=\"nonzero\" points=\"80.145242 174.933603 2.5312463 126.04788 31.2780504 104.613485 107.564642 146.826102 90.926149 162.859841 85.479484 162.859841 85.479484 170.595655\"></polygon>\n                    <circle fillRule=\"nonzero\" cx=\"41\" cy=\"137\" r=\"3\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"107.564642\" cy=\"121\" r=\"3\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"62\" cy=\"134\" r=\"4\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"69\" cy=\"153\" r=\"4\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"124.433924\" cy=\"89.037324\" r=\"4\"></circle>\n                    <circle fillRule=\"nonzero\" cx=\"35\" cy=\"120\" r=\"2\"></circle>\n                    <polygon class=\"sparkle tiny-diamond one\" points=\"191.959409 87.0373244 189.442594 89.7549639 191.959409 92.0373244 194.442594 89.7549639\"></polygon>\n                    <polygon class=\"sparkle tiny-diamond two\" points=\"11.0168157 80.0373244 8.5 82.7549634 11.0168157 85.0373244 13.5 82.7549634\"></polygon>\n                    <polygon class=\"sparkle tiny-diamond three\" points=\"129.950742 172.933603 127.433924 175.651243 129.950742 177.933603 132.433924 175.651243\"></polygon>\n                    <polygon class=\"sparkle tiny-diamond four\" points=\"33.5168157 16.3899994 31 19.1076384 33.5168157 21.3899994 36 19.1076384\"></polygon>\n                    <polygon class=\"sparkle tiny-diamond five\" points=\"41.5067263 198.426172 40.5 199.513227 41.5067263 200.426172 42.5 199.513227\"></polygon>\n                    <polygon class=\"sparkle tiny-diamond six\" points=\"71.5168157 29 69 31.717639 71.5168157 34 74 31.717639\"></polygon>\n                    <polygon class=\"sparkle tiny-diamond seven\" points=\"158.314714 31 155.797899 33.717639 158.314714 36 160.797899 33.717639\"></polygon>\n                    <polygon class=\"sparkle medium-diamond one\" points=\"7.52690496 57 3.5 61.3482222 7.52690496 65 11.5 61.3482222\"></polygon>\n                    <polygon class=\"sparkle medium-diamond two\" points=\"88.0269056 8.3899994 84 12.7382216 88.0269056 16.3899994 92 12.7382216\"></polygon>\n                    <polygon class=\"sparkle medium-diamond three\" points=\"105.593732 175.047964 101.566826 179.396186 105.593732 183.047964 109.566826 179.396186\"></polygon>\n                    <g class=\"tiny-cross sparkle one\" transform=\"translate(101.066826, 6.450846)\">\n                        <path d=\"M1.61013305,0.327847453 L1.61013305,3.31931288\"></path>\n                        <path d=\"M0.223441047,1.83654414 L2.89655788,1.83654414\"></path>\n                    </g>\n                    <g class=\"tiny-cross sparkle two\" transform=\"translate(4.000000, 0.450846)\">\n                        <path d=\"M2.26403445,0.729264467 L2.26403445,3.72072989\"></path>\n                        <path d=\"M0.877342453,2.23796115 L3.55045929,2.23796115\"></path>\n                    </g>\n                    <polygon class=\"sparkle tiny-diamond eight\" points=\"124.950742 27 122.433924 29.717639 124.950742 32 127.433924 29.717639\"></polygon>\n\n                 </g>\n        </svg>\n)\n}","import React from 'react';\n\nexport const Branch = () => {\n    return (\n    <svg id=\"olivebranch\" width=\"93px\" height=\"101px\" viewBox=\"0 0 93 101\" version=\"1.1\">\n    <title>olive branch</title>\n    <desc>A single olive branch with leaves</desc>\n    <defs></defs>\n        <g strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" transform=\"translate(0.031843, -1.368107)\" stroke=\"#979797\">\n            <path class=\"leaf one\" d=\"M35.7897848,77.4538006 C37.18168,77.4538006 38.3100341,72.1638871 38.3100341,65.6384478 C38.3100341,61.288155 37.469951,57.349704 35.7897848,53.823095 C34.1096188,57.349704 33.2695357,61.288155 33.2695357,65.6384478 C33.2695357,72.1638871 34.3978896,77.4538006 35.7897848,77.4538006 Z\" fillRule=\"nonzero\"></path>\n            <path class=\"leaf two\" d=\"M46.7450106,65.2398326 C48.1369058,65.2398326 49.2652599,59.9499191 49.2652599,53.4244798 C49.2652599,49.074187 48.4251768,45.135736 46.7450106,41.609127 C45.0648446,45.135736 44.2247615,49.074187 44.2247615,53.4244798 C44.2247615,59.9499191 45.3531154,65.2398326 46.7450106,65.2398326 Z\" fillRule=\"nonzero\" transform=\"translate(46.745011, 53.424480) rotate(-8.000000) translate(-46.745011, -53.424480) \"></path>\n            <path class=\"leaf three\" d=\"M67.8919611,32.7724355 C69.2838563,32.7724355 70.4122104,27.4825218 70.4122104,20.9570827 C70.4122104,16.6067899 69.5721273,12.668339 67.8919611,9.14172987 C66.2117952,12.668339 65.3717121,16.6067899 65.3717121,20.9570827 C65.3717121,27.4825218 66.5000662,32.7724355 67.8919611,32.7724355 Z\" fillRule=\"nonzero\" transform=\"translate(67.891961, 20.957083) rotate(-7.000000) translate(-67.891961, -20.957083) \"></path>\n            <path class=\"leaf four\" d=\"M67.8919611,32.7724355 C69.2838563,32.7724355 70.4122104,27.4825218 70.4122104,20.9570827 C70.4122104,16.6067899 69.5721273,12.668339 67.8919611,9.14172987 C66.2117952,12.668339 65.3717121,16.6067899 65.3717121,20.9570827 C65.3717121,27.4825218 66.5000662,32.7724355 67.8919611,32.7724355 Z\" fillRule=\"nonzero\" transform=\"translate(67.891961, 20.957083) rotate(-7.000000) translate(-67.891961, -20.957083) \"></path>\n            <path class=\"leaf five\" d=\"M78.847187,24.6297903 C80.2390822,24.6297903 81.3674363,19.3398767 81.3674363,12.8144375 C81.3674363,8.46414474 80.5273532,4.5256938 78.847187,0.999084687 C77.167021,4.5256938 76.3269379,8.46414474 76.3269379,12.8144375 C76.3269379,19.3398767 77.455292,24.6297903 78.847187,24.6297903 Z\" fillRule=\"nonzero\" transform=\"translate(78.847187, 12.814438) rotate(16.000000) translate(-78.847187, -12.814438) \"></path>\n            <path class=\"leaf six\" d=\"M33.2695361,107.664494 C34.6614313,107.664494 35.7897852,102.37458 35.7897852,95.8491411 C35.7897852,91.4988483 34.9497023,87.5603973 33.2695361,84.0337883 C31.5893699,87.5603973 30.749287,91.4988483 30.749287,95.8491411 C30.749287,102.37458 31.8776409,107.664494 33.2695361,107.664494 Z\" fillRule=\"nonzero\" transform=\"translate(33.269536, 95.849141) scale(-1, 1) rotate(-119.000000) translate(-33.269536, -95.849141) \"></path>\n            <path class=\"leaf seven\" d=\"M72.7083494,77.1295732 C74.1002446,77.1295732 75.2285985,71.8396595 75.2285985,65.3142204 C75.2285985,60.9639276 74.3885156,57.0254766 72.7083494,53.4988676 C71.0281832,57.0254766 70.1881003,60.9639276 70.1881003,65.3142204 C70.1881003,71.8396595 71.3164542,77.1295732 72.7083494,77.1295732 Z\" fillRule=\"nonzero\" transform=\"translate(72.708349, 65.314220) scale(-1, 1) rotate(-47.000000) translate(-72.708349, -65.314220) \"></path>\n            <path class=\"leaf eight\" d=\"M52.7012184,48.4713861 C54.0931136,48.4713861 55.2214677,43.1814726 55.2214677,36.6560333 C55.2214677,32.3057405 54.3813846,28.3672895 52.7012184,24.8406805 C51.0210524,28.3672895 50.1809693,32.3057405 50.1809693,36.6560333 C50.1809693,43.1814726 51.3093234,48.4713861 52.7012184,48.4713861 Z\" fillRule=\"nonzero\" transform=\"translate(52.701218, 36.656033) rotate(-18.000000) translate(-52.701218, -36.656033) \"></path>\n            <path class=\"leaf nine\" d=\"M80.8468755,52.8201317 C82.2387707,52.8201317 83.3671246,47.530218 83.3671246,41.0047787 C83.3671246,36.6544859 82.5270417,32.7160351 80.8468755,29.1894259 C79.1667096,32.7160351 78.3266265,36.6544859 78.3266265,41.0047787 C78.3266265,47.530218 79.4549803,52.8201317 80.8468755,52.8201317 Z\" fillRule=\"nonzero\" transform=\"translate(80.846876, 41.004779) scale(-1, 1) rotate(-81.000000) translate(-80.846876, -41.004779) \"></path>\n            <path d=\"M0.533527695,96.0638651 C21.6449571,89.275536 35.9975469,82.4503293 43.5912972,75.5882448 C51.1850474,68.7261605 60.93236,53.773516 72.8332347,30.7303114 L74.5035029,24.8651454\"></path>\n            <path d=\"M50.3937015,67.4640676 L71.1296883,55.7586079\"></path>\n            <path d=\"M59.2394492,53.823095 L62.758972,32.7724356\"></path>\n            <path d=\"M39.4685775,78.3651646 L70.0830063,71.1836717\"></path>\n            <path class=\"leaf ten\" d=\"M59.1277804,38.8794195 C60.5196756,38.8794195 61.6480297,33.5895058 61.6480297,27.0640667 C61.6480297,22.7137739 60.8079466,18.775323 59.1277804,15.2487139 C57.4476144,18.775323 56.6075313,22.7137739 56.6075313,27.0640667 C56.6075313,33.5895058 57.7358854,38.8794195 59.1277804,38.8794195 Z\"  fillRule=\"nonzero\" transform=\"translate(59.127781, 27.064067) rotate(-13.000000) translate(-59.127781, -27.064067) \"></path>\n            <path class=\"leaf eleven\" d=\"M59.5620783,89.3435418 C60.9539735,89.3435418 62.0823274,84.053628 62.0823274,77.528189 C62.0823274,73.1778962 61.2422445,69.2394452 59.5620783,65.7128361 C57.8819121,69.2394452 57.0418293,73.1778962 57.0418293,77.528189 C57.0418293,84.053628 58.1701831,89.3435418 59.5620783,89.3435418 Z\" fillRule=\"nonzero\" transform=\"translate(59.562078, 77.528189) scale(-1, 1) rotate(-119.000000) translate(-59.562078, -77.528189) \"></path>\n            <path class=\"leaf twelve\" d=\"M77.0904391,64.9156056 C78.4823343,64.9156056 79.6106881,59.6256918 79.6106881,53.1002528 C79.6106881,48.74996 78.7706052,44.811509 77.0904391,41.2849 C75.4102729,44.811509 74.57019,48.74996 74.57019,53.1002528 C74.57019,59.6256918 75.6985439,64.9156056 77.0904391,64.9156056 Z\" fillRule=\"nonzero\" transform=\"translate(77.090439, 53.100253) scale(-1, 1) rotate(116.000000) translate(-77.090439, -53.100253) \"></path>\n        </g>\n</svg>\n    )\n}","import React from 'react';\n\nexport const Radio = () => {\n    return (\n    <svg viewBox=\"0,0,800,800\" height=\"100%\" width=\"100%\">\n  <title>wavy</title>\n  <desc>wavy radio icon</desc>\n  <defs>\n    <path d=\"M595.904795,381 L632,381 L632,299 L155.274094,299 L155.274094,381 L405.095205,381 C429.057487,355.747331 462.939751,340 500.5,340 C538.060249,340 571.942513,355.747331 595.904795,381 Z\" id=\"path-1\"></path>\n    <mask id=\"mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"476.725906\" height=\"82\" fill=\"white\">\n      <use href=\"#path-1\"></use>\n    </mask>\n  </defs>\n  <g id=\"Page-1\" stroke=\"black\" stroke-width=\"4\" fill=\"none\" fill-rule=\"evenodd\">\n    <g id=\"soundcloud\">\n        <path d=\"M133,85 L138,85 L138,106 L133,106 L133,85 Z M128,71 L143,71 L141,85 L130,85 L128,71 Z\" id=\"antenna-top\" fill=\"#FFFFFF\"></path>\n        <rect id=\"antenna-middle\" fill=\"white\" x=\"131\" y=\"100\" width=\"9\" height=\"80\"></rect>\n        <path d=\"M129,180 L141.73888,180 L141.73888,317.48407 C141.73888,317.48407 129,321.438156 129,309.836779 L129,180 Z\" id=\"antenna-bottom\" fill=\"white\"></path>\n        <rect id=\"Rectangle-2\" fill=\"white\" x=\"135\" y=\"289\" width=\"516\" height=\"317\"></rect>\n        <path d=\"M580.336051,367 L626,367 L626,318 L158.103555,318 L158.103555,367 L420.663949,367 C442.799954,350.062853 470.474824,340 500.5,340 C530.525176,340 558.200046,350.062853 580.336051,367 Z\" id=\"Combined-Shape\" fill=\"#FFFFFF\"></path>\n        <path d=\"M158.498411,331.627666 L627.869995,331.627666\" id=\"Path-2\" stroke=\"black\" stroke-width=\"4\" stroke-dasharray=\"3,2\"></path>\n        <polygon id=\"Rectangle-4\" fill=\"white\" points=\"650 289 670.157288 275.988767 669.157288 571.142057 650 606\"></polygon>\n        <use id=\"Combined-Shape\" stroke=\"black\" mask=\"url(#mask-2)\" stroke-width=\"10\" href=\"#path-1\"></use>\n        <polygon id=\"Rectangle-3\" fill=\"white\" points=\"184.943596 275.362611 671.101471 275.362611 650 289 135.360923 289\"></polygon>\n        <g id=\"speaker\" transform=\"translate(385.000000, 356.000000)\">\n            <circle id=\"speaker-large\" fill=\"white\" cx=\"115.5\" cy=\"115.5\" r=\"115.5\"></circle>\n            <ellipse id=\"speaker-small\" stroke=\"black\" stroke-width=\"4\" cx=\"113.660072\" cy=\"112.339928\" rx=\"45.3399281\" ry=\"45.3399281\"></ellipse>\n        </g>\n        <rect id=\"Rectangle-6\" fill=\"white\" x=\"158\" y=\"393\" width=\"199\" height=\"121\"></rect>\n             <rect id=\"Rectangle-7\" fill=\"white\" x=\"160\" y=\"525\" width=\"199\" height=\"59\"></rect>\n             <ellipse id=\"Oval-6\" stroke=\"black\" fill=\"#FFFFFF\" cx=\"663.5\" cy=\"359.5\" rx=\"8.5\" ry=\"40.5\"></ellipse>\n             <rect id=\"Rectangle-8\" fill=\"#FFFFFF\" x=\"662\" y=\"318\" width=\"12\" height=\"83\"></rect>\n             <ellipse id=\"Oval-6\" fill=\"white\" cx=\"673.5\" cy=\"359.5\" rx=\"8.5\" ry=\"40.5\"></ellipse>\n             <path id=\"needle\" d=\"M246.359053,375.877534 C246.359053,355.62646 249.877203,305.629144 249.877203,305.629144 L251.978315,375.877534\" fill=\"white\"></path>\n    </g>\n  </g>\n</svg>)}","import React from 'react';\n\nexport const StarMap = () => {\n    return (\n<svg id=\"starmap\" width=\"100%\" height=\"100%\" viewBox=\"0 0 142 144\" version=\"1.1\">\n    <title>Swan constellation</title>\n    <desc>Aniamted star map of Lyra, Sagitta, and Cygnus constellations</desc>\n    <defs></defs>\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(-97.000000, -215.000000)\">\n            <g transform=\"translate(30.000000, 3.000000)\">\n                <g id=\"swan\" transform=\"translate(67.000000, 212.000000)\">\n                    <path stroke=\"#4e4e4e\" d=\"M81.0720234 20.5106335 58.2248955 16.1290925 2.71877904 25.1515052 32.5876207 40.639477 68.7189312 45.0043543\"></path>\n                    <path stroke=\"#4e4e4e\" d=\"M81.3469763 20.8241215 98.4888314 31.4285549 95.5726643 34.3124359\"></path>\n                    <path stroke=\"#4e4e4e\" d=\"M99.0720649 32.3231933 129.1742 47.1071191 139.982765 48.9390969\"></path>\n                    <path stroke=\"#4e4e4e\" d=\"M129.867831 46.5853335 121.678609 48.1788105 102.206945 55.8368736 69.1094893 44.6710781 63.8645544 76.7499578 60.3411997 86.6066026 58.846664 114.399758\"></path>\n                    <circle fill=\"#FFFFFF\" cx=\"80.5040956\" cy=\"20.5\" r=\"3.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"102.145594\" cy=\"55.7670047\" r=\"2.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"68.1455937\" cy=\"44.7670047\" r=\"2.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"33.1455937\" cy=\"40.7670047\" r=\"2.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"3.14559365\" cy=\"25.7670047\" r=\"2.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"59.1455937\" cy=\"113.767005\" r=\"2.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"58.3239779\" cy=\"16\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"121.645594\" cy=\"47.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"129.645594\" cy=\"46.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"139.645594\" cy=\"48.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"95.6455937\" cy=\"34.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"63.6455937\" cy=\"76.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"59.6455937\" cy=\"86.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"98.6455937\" cy=\"31.3615187\" r=\"1.5\"></circle>\n                                        <g transform=\"translate(21.000000, 0.000000)\" fill=\"#FFFFFF\">\n                    <circle cx=\"46.3239779\" cy=\"5\" r=\"1.5\"></circle>\n                    <circle cx=\"110.645594\" cy=\"14.3615187\" r=\"1.5\"></circle>\n                    <circle cx=\"1.64559365\" cy=\"10.3615187\" r=\"1.5\"></circle>\n                    <circle cx=\"16.6455937\" cy=\"7.36151869\" r=\"1.5\"></circle>\n                    <circle cx=\"21.6455937\" cy=\"2.36151869\" r=\"1.5\"></circle>\n                    <circle cx=\"22.6455937\" cy=\"13.3615187\" r=\"1.5\"></circle>\n                </g>\n                <g id=\"sagitta\" transform=\"translate(10.000000, 121.000000)\">\n                    <path stroke=\"#4e4e4e\" d=\"M2.49428096 2.15867166 7.71763614 13.2578489 10.2315794 21.3589362\"></path>\n                    <path d=\"M8.49317588,13.7103225 L13.6984321,21.2268139\" stroke=\"#4e4e4e\"></path>\n                    <circle fill=\"#FFFFFF\" cx=\"13.8913376\" cy=\"21.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"9.64559365\" cy=\"21.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"2.2063125\" cy=\"2.36151869\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"8.14559365\" cy=\"13.8615187\" r=\"1.5\"></circle>\n                </g>\n                <g id=\"lyra\" transform=\"translate(90.000000, 102.000000)\">\n                    <path stroke=\"#4e4e4e\" d=\"M32.5040874 6.85830055 23.2949531 6.85830055 16.5777023 3.65422288 3.63233628 13.6807076 10.3161283 16.9150575 23.2949531 7.2846402\"></path>\n                    <circle fill=\"#FFFFFF\" cx=\"3.14559365\" cy=\"14\" r=\"2.5\"></circle>\n                    <circle id=\"Star\" fill=\"#FFFFFF\" cx=\"32\" cy=\"8\" r=\"3\" stroke-width=\"2\" stroke-dasharray=\"1\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"23.6455937\" cy=\"6.36151869\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"16.6455937\" cy=\"3.36151869\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"10.6455937\" cy=\"16.3615187\" r=\"1.5\"></circle>\n                </g>\n                    <circle fill=\"#FFFFFF\" cx=\"29.6455937\" cy=\"111.361519\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"50.6455937\" cy=\"126.361519\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"122.645594\" cy=\"84.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"100.645594\" cy=\"88.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"95.6455937\" cy=\"90.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"37.6455937\" cy=\"64.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"27.6455937\" cy=\"64.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"19.6455937\" cy=\"49.3615187\" r=\"1.5\"></circle>\n                    <circle fill=\"#FFFFFF\" cx=\"125.645594\" cy=\"123.361519\" r=\"1.5\"></circle>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>)}","import React, { useState } from 'react';\nimport { Cheese, Branch, LittleLines, StarMap, Radio } from '../../images';\nimport { Lines } from '../Lines';\n\nexport const Project = ({projectName, copy, codeUrl, liveUrl}) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const images = {\n        wavy: <Radio />,\n        mousetrap: <Cheese />,\n        starchart: <StarMap />,\n        romanholiday: <Branch />,\n        lines: <Lines strokeColor=\"black\"/>\n    }\n\n    const trimmedName = projectName.replace(' ', '');\n\n    return (\n        <div className={`project ${trimmedName} ${isOpen ? 'open': ''}`}\n             onClick={() => { setIsOpen(!isOpen)}} \n        >\n            <div className=\"project-image\" id={trimmedName}>\n                { images[trimmedName]}\n            </div>\n            <div className=\"project-text-box\">\n                <p>\n                    <span className=\"project-name\">{projectName}</span>\n                    {` ${copy}`}\n                </p>\n                <div className=\"link-container\">\n                    <a className=\"button\" href={liveUrl}>live</a>\n                    <a className=\"button\" href={codeUrl}>code</a>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { Project } from '../components/Project';\nimport { Link } from 'react-router-dom'\nimport './Projects.css';\n\nconst Projects = () => {\n    const PROJECTS = [\n        { projectName: 'wavy', copy: 'an audio visualizer using the HTML5 audio API', codeUrl: 'https://github.com/millsoper/wavy', liveUrl: 'http://millsoper.github.io/wavy'},\n        { projectName: 'lines', copy: 'animating randomized SVG paths without greensock', codeUrl: 'https://github.com/millsoper/svg-path-animation', liveUrl: 'http://millsoper.github.io/svg-path-animation'},\n        { projectName: 'mouse trap', copy: 'experiments with cursor tracking', codeUrl: 'https://glitch.com/edit/#!/mouse-trap', liveUrl: 'https://mouse-trap.glitch.me'},\n        { projectName: 'star chart', copy: 'an interactive star chart built with styled components and react hooks', codeUrl: 'https://glitch.com/edit/#!/star-chart', liveUrl: 'https://star-chart.glitch.me'},\n        { projectName: 'roman holiday', copy: 'find the next ancient roman holiday via a node and express app', codeUrl: 'https://glitch.com/edit/#!/roman-holiday', liveUrl: 'https://roman-holiday.glitch.me'},\n    ];\n    return (\n        <>\n            <Link to=\"/\" className=\"back button\">{`< home `}</Link>\n            <div className=\"project-container\">\n            { PROJECTS.map( project => {\n                return <Project\n                            key={project.projectName}\n                            projectName={project.projectName}\n                            copy={project.copy}\n                            codeUrl={project.codeUrl}\n                            liveUrl={project.liveUrl}\n                        />\n            })}\n            </div>\n        </>\n    )\n}\n\nexport default Projects;","import './App.css';\nimport { Routes, Route } from \"react-router-dom\"\nimport Home from './Pages/Home';\nimport About from './Pages/About';\nimport Projects from './Pages/Projects';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route exact path=\"/\" element={<Home />}/>\n        <Route path=\"/about\" element={<About />}/>\n        <Route path=\"/projects\" element={<Projects />}/>\n\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}